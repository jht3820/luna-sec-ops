<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="spr1000DAO">

	
	<typeAlias alias="egovMap"	 	type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	
	 <resultMap id="resultMapSpr1000List" class="egovMap">
	 	<result property="rn"					column="RN"/>
    	<result property="licGrpId"				column="LIC_GRP_ID"/>
		<result property="prjGrpId"				column="PRJ_GRP_ID"/>
		<result property="prjId"				column="PRJ_ID"/>
		<result property="sprId"				column="SPR_ID"/>
		<result property="sprNm"				column="SPR_NM"/>
		<result property="sprDesc"				column="SPR_DESC" jdbcType="CLOB" javaType="java.lang.String" />
		<result property="sprTypeCd"			column="SPR_TYPE_CD"/>
		<result property="sprTypeNm"			column="SPR_TYPE_NM"/>
		<result property="sprStDt"				column="SPR_ST_DT"/>
		<result property="sprEdDt"				column="SPR_ED_DT"/>
		<result property="sprOngoingCnt"		column="SPR_ONGOING_CNT"/>
		<result property="ord"					column="ORD"/>
		<result property="useCd"				column="USE_CD"/>
		<result property="useNm"				column="USE_NM"/>
		<result property="delCd"				column="DEL_CD"/>
		<result property="reqAllCnt"			column="REQ_ALL_CNT"/>
		<result property="reqDoneCnt"			column="REQ_DONE_CNT"/>
		<result property="reqProgressCnt"		column="REQ_PROGRESS_CNT"/>
		<result property="restDay"				column="REST_DAY"/>
    </resultMap>
	
	 <resultMap id="resultMapSpr1000ReqList" class="egovMap">
		<result property="rn"					column="RN"/>
		<result property="prjId"				column="PRJ_ID"/>
		<result property="prjNm"				column="PRJ_NM"/>
		<result property="prjGrpId"				column="PRJ_GRP_ID"/>
		<result property="prjGrpNm"				column="PRJ_GRP_NM"/>
		<result property="reqId"				column="REQ_ID"/>
		<result property="reqOrd"				column="REQ_ORD"/>
		<result property="reqClsId"				column="REQ_CLS_ID"/>
		<result property="reqClsNm"				column="REQ_CLS_NM"/>
		<result property="reqUsrId"				column="REQ_USR_ID"/>
		<result property="reqUsrNm"				column="REQ_USR_NM"/>
		<result property="reqDtm"				column="REQ_DTM"/>
		<result property="reqUsrDeptId"			column="REQ_USR_DEPT_ID"/>
		<result property="reqUsrDeptNm"			column="REQ_USR_DEPT_NM"/>
		<result property="reqUsrDeptNm"			column="REQ_USR_DEPT_NM"/>
		<result property="reqUsrEmail"			column="REQ_USR_EMAIL"/>
		<result property="reqUsrNum"			column="REQ_USR_NUM"/>
		<result property="reqUsrImgId"			column="REQ_USR_IMG_ID"/>
		<result property="reqNm"				column="REQ_NM"/>
		<result property="reqPw"				column="REQ_PW"/>
		<result property="reqChargerId"			column="REQ_CHARGER_ID"/>
		<result property="reqChargerNm"			column="REQ_CHARGER_NM"/>
		<result property="reqChargerImgID"		column="REQ_CHARGER_IMG_ID"/>
		<result property="reqStDtm"				column="REQ_ST_DTM"/>
		<result property="reqEdDtm"				column="REQ_ED_DTM"/>
		<result property="reqStDuDtm"			column="REQ_ST_DU_DTM"/>
		<result property="reqEdDuDtm"			column="REQ_ED_DU_DTM"/>
		<result property="endTimeRequired"		column="END_TIME_REQUIRED"/>
		<result property="notEndTimeRequired"	column="NOT_END_TIME_REQUIRED"/>
		<result property="reqProType"			column="REQ_PRO_TYPE"/>
		<result property="reqProTypeNm"			column="REQ_PRO_TYPE_NM"/>
		<result property="reqNewType"			column="REQ_NEW_TYPE"/>
		<result property="reqNewTypeNm"			column="REQ_NEW_TYPE_NM"/>
		<result property="reqAcceptTxt"			column="REQ_ACCEPT_TXT" jdbcType="CLOB" javaType="java.lang.String"/>
		<result property="reqTypeCd"			column="REQ_TYPE_CD"/>
		<result property="reqTypeNm"			column="REQ_TYPE_NM"/>
		<result property="atchFileid"			column="ATCH_FILE_ID"/>
		<result property="cbAtchFileid"			column="CB_ATCH_FILE_ID"/>
		<result property="useCd"				column="USE_CD"/>
		<result property="reqKey"				column="REQ_KEY"/>
		<result property="sprPoint"				column="SPR_POINT"/>	
		<result property="reqResultDescLen"		column="REQ_RESULT_DESC_LEN"/>	
		<result property="regDtm"				column="REG_DTM"/>	
		<result property="regDtmDay"			column="REG_DTM_DAY"/>	
		<result property="regUsrId"				column="REG_USR_ID"/>	
		<result property="regUsrIp"				column="REG_USR_IP"/>	
		<result property="modifyDtm"			column="MODIFY_DTM"/>	
		<result property="modifyUsrId"			column="MODIFY_USR_ID"/>	
		<result property="modifyUsrIp"			column="MODIFY_USR_IP"/>	
    </resultMap>
	
	
	<sql id="selectSpr1000List">
		SELECT 
			ROWNUM RN
			, T1.LIC_GRP_ID
			, T1.PRJ_GRP_ID
			, T1.PRJ_ID
			, T1.SPR_ID AS SPR_ID
			, T1.SPR_NM AS SPR_NM
			, T1.SPR_DESC
			, T1.SPR_TYPE_CD AS SPR_TYPE_CD
			, SF_STM4001_COM_CD_INFO(T1.LIC_GRP_ID, 'SPR00001', T1.SPR_TYPE_CD, '1') AS SPR_TYPE_NM
			, T1.SPR_ST_DT AS SPR_ST_DT
			, T1.SPR_ED_DT AS SPR_ED_DT
			, T1.ORD
			, T1.USE_CD
			, SF_STM4001_COM_CD_INFO(T1.LIC_GRP_ID, 'CMM00001', T1.USE_CD, '1') AS USE_NM
			, T1.DEL_CD
			, T1.REQ_ALL_CNT
			, T1.REQ_DONE_CNT
			, T1.REQ_PROGRESS_CNT
			, T1.REST_DAY
			, T1.SPR_ONGOING_CNT 
		FROM
		(
			SELECT
				A.LIC_GRP_ID
				, A.PRJ_GRP_ID
				, A.PRJ_ID
				, A.SPR_ID AS SPR_ID
				, A.SPR_NM AS SPR_NM
				, A.SPR_DESC AS SPR_DESC
				, A.SPR_TYPE_CD AS SPR_TYPE_CD
				, TO_CHAR(A.SPR_ST_DT, 'YYYY-MM-DD') AS SPR_ST_DT
          		, TO_CHAR(A.SPR_ED_DT, 'YYYY-MM-DD') AS SPR_ED_DT
          		, ORD
          		, USE_CD
          		, DEL_CD
          		, (SELECT COUNT(*) FROM SPR1100 WHERE LIC_GRP_ID = A.LIC_GRP_ID AND PRJ_GRP_ID = A.PRJ_GRP_ID AND PRJ_ID = A.PRJ_ID AND SPR_ID = A.SPR_ID) AS REQ_ALL_CNT
				,
		        (
					SELECT COUNT(*)
		            FROM SPR1100 Z INNER JOIN REQ4100 Y ON(Z.PRJ_ID = Y.PRJ_ID AND Z.REQ_ID = Y.REQ_ID AND Y.REQ_PRO_TYPE = '04')
		            WHERE Z.LIC_GRP_ID = A.LIC_GRP_ID AND Z.PRJ_GRP_ID = A.PRJ_GRP_ID AND Z.PRJ_ID = A.PRJ_ID AND Z.SPR_ID = A.SPR_ID
		        ) AS REQ_DONE_CNT
		        ,
		        (
		          	SELECT COUNT(*)
		            FROM SPR1100 Z INNER JOIN REQ4100 Y ON(Z.PRJ_ID = Y.PRJ_ID AND Z.REQ_ID = Y.REQ_ID AND Y.REQ_PRO_TYPE = '02')
		            WHERE Z.LIC_GRP_ID = A.LIC_GRP_ID AND Z.PRJ_GRP_ID = A.PRJ_GRP_ID AND Z.PRJ_ID = A.PRJ_ID AND Z.SPR_ID = A.SPR_ID
		        ) AS REQ_PROGRESS_CNT
		        <![CDATA[
		        , CASE WHEN TRUNC(A.SPR_ED_DT - SYSDATE) < 0 THEN 0 ELSE TRUNC(A.SPR_ED_DT - SYSDATE) END AS REST_DAY
		        ]]>
		        , (SELECT COUNT(*) FROM SPR1000 WHERE SPR_TYPE_CD = '02' 
		        	AND LIC_GRP_ID = #licGrpId# 
		        	AND PRJ_GRP_ID = #prjGrpId# 
		        	AND PRJ_ID = #prjId# 
		        	AND DEL_CD = '02') AS SPR_ONGOING_CNT
		    FROM SPR1000 A
		    WHERE 1=1
		    AND A.LIC_GRP_ID = #licGrpId#
		    AND A.PRJ_GRP_ID = #prjGrpId#
			AND A.PRJ_ID = #prjId#
			<isNotEmpty property="useCd">
				AND A.USE_CD = #useCd#
			</isNotEmpty>
			<isNotEmpty property="delCd">
				AND A.DEL_CD = #delCd#
			</isNotEmpty>
			<isNotEmpty property="paramSortFieldId">
				<isNotEmpty property="sortDirection">
					ORDER BY $paramSortFieldId$
					<isEqual property="sortDirection" compareValue="desc">
						DESC
					</isEqual>
					<isEqual property="sortDirection" compareValue="asc">
						ASC
					</isEqual>
				</isNotEmpty>
			</isNotEmpty>
			<isEmpty property="paramSortFieldId">
				ORDER BY A.ORD DESC
			</isEmpty> 
		) T1 
		WHERE 1 = 1
		<isNotEmpty property="searchTargetData">
			<isNotEmpty property="searchTargetId">
				<isEqual property="searchTargetId" compareValue="sprNm">
					AND	UPPER(T1.SPR_NM) LIKE '%'|| UPPER(#searchTargetData#) ||'%'
				</isEqual>
				<isEqual property="searchTargetId" compareValue="sprDesc">
				<![CDATA[
					AND	REGEXP_REPLACE(T1.SPR_DESC, '<[^>]*>', '') LIKE '%'|| #searchTargetData# ||'%'
				]]>
				</isEqual>
				<isEqual property="searchTargetId" compareValue="sprTypeCd">
					AND	T1.SPR_TYPE_CD = #searchTargetData#
				</isEqual>
				<isEqual property="searchTargetId" compareValue="useCd">
					AND A.USE_CD = #useCd#
				</isEqual>
				<isEqual property="searchTargetId" compareValue="sprStDt">
					<isNotEmpty property="searchStartDt">
						AND	TO_DATE(T1.SPR_ST_DT, 'YYYY-MM-DD') &gt;= TO_DATE(SUBSTR(#searchStartDt#, 0, INSTR(#searchStartDt#, ' ')), 'YYYY-MM-DD')
					</isNotEmpty>
					<isNotEmpty property="searchEndDt">
						AND	TO_DATE(T1.SPR_ST_DT, 'YYYY-MM-DD') &lt;=  TO_DATE(SUBSTR(#searchEndDt#, 0, INSTR(#searchStartDt#, ' ')), 'YYYY-MM-DD')
					</isNotEmpty>
				</isEqual>
				<isEqual property="searchTargetId" compareValue="sprEdDt">
					<isNotEmpty property="searchStartDt">
						AND	TO_DATE(T1.SPR_ED_DT, 'YYYY-MM-DD') &gt;= TO_DATE(SUBSTR(#searchStartDt#, 0, INSTR(#searchStartDt#, ' ')), 'YYYY-MM-DD')
					</isNotEmpty>
					<isNotEmpty property="searchEndDt">
						AND	TO_DATE(T1.SPR_ED_DT, 'YYYY-MM-DD') &lt;=  TO_DATE(SUBSTR(#searchEndDt#, 0, INSTR(#searchStartDt#, ' ')), 'YYYY-MM-DD')
					</isNotEmpty>
				</isEqual>
				<isEqual property="searchTargetId" compareValue="sprDtm">
					<isNotEmpty property="searchStartDt">
						AND	TO_DATE(T1.SPR_ST_DT, 'YYYY-MM-DD') &gt;= TO_DATE(SUBSTR(#searchStartDt#, 0, INSTR(#searchStartDt#, ' ')), 'YYYY-MM-DD')
					</isNotEmpty>
					<isNotEmpty property="searchEndDt">
						AND	TO_DATE(T1.SPR_ED_DT, 'YYYY-MM-DD') &lt;=  TO_DATE(SUBSTR(#searchEndDt#, 0, INSTR(#searchStartDt#, ' ')), 'YYYY-MM-DD')
					</isNotEmpty>
				</isEqual>
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty property="location">
			<isEqual property="location" compareValue="spr1100">
				AND T1.SPR_TYPE_CD != '03'
			</isEqual>
		</isNotEmpty>
	</sql>
	
	
	<sql id="selectSpr1000ReqList">
		SELECT
			ROWNUM RN
			,	SUBT2.PRJ_ID
			,	SF_PRJ1000_GRP_NM(SUBT2.PRJ_ID) AS PRJ_NM
			,	SUBT2.PRJ_GRP_ID
			,	SF_PRJ1000_GRP_NM(SUBT2.PRJ_GRP_ID) AS PRJ_GRP_NM
			,	SUBT2.REQ_ID
			,	SUBT2.REQ_ORD
			,	SUBT2.REQ_CLS_ID
			,	NVL(SF_REQ2000_REQ_CLS_NM(SUBT2.PRJ_ID, SUBT2.REQ_CLS_ID, '1'), '') AS REQ_CLS_NM
			,	SUBT2.REQ_USR_ID
			,	NVL(SUBT2.REQ_USR_NM, SF_STM3000_USR_INFO(SUBT2.REQ_USR_ID, '1')) AS REQ_USR_NM
			,	SUBT2.REQ_DTM
			,	SUBT2.REQ_USR_DEPT_ID
			,	SUBT2.REQ_USR_DEPT_NM
			,	SUBT2.REQ_USR_EMAIL
			,	SUBT2.REQ_USR_NUM
			,	SF_STM3000_USR_INFO(SUBT2.REQ_USR_ID, '6')  AS REQ_USR_IMG_ID
			,	SUBT2.REQ_NM
			,	SUBT2.REQ_PW
			,	SUBT2.REQ_CHARGER_ID
			,	SF_STM3000_USR_INFO(SUBT2.REQ_CHARGER_ID, 1) AS REQ_CHARGER_NM
			,	SF_STM3000_USR_INFO(SUBT2.REQ_CHARGER_ID, 6) AS REQ_CHARGER_IMG_ID
			, 	SUBT2.REQ_ST_DTM
  		   	, 	SUBT2.REQ_ED_DTM
			, 	SUBT2.REQ_ST_DU_DTM
			, 	SUBT2.REQ_ED_DU_DTM
			,	SUBT2.END_TIME_REQUIRED
			,	SUBT2.NOT_END_TIME_REQUIRED
			,	SUBT2.REQ_PRO_TYPE
			,   SF_STM4001_COM_CD_INFO(#licGrpId#, 'REQ00008', SUBT2.REQ_PRO_TYPE, '1') AS REQ_PRO_TYPE_NM
			,	SUBT2.REQ_NEW_TYPE
			,   SF_STM4001_COM_CD_INFO(#licGrpId#, 'REQ00009', SUBT2.REQ_NEW_TYPE, '1') AS REQ_NEW_TYPE_NM
			,	SUBT2.REQ_ACCEPT_TXT
	    	,	SUBT2.REQ_TYPE_CD
	    	,   SF_STM4001_COM_CD_INFO(#licGrpId#, 'REQ00012', SUBT2.REQ_TYPE_CD, '1') AS REQ_TYPE_NM
			,	SUBT2.ATCH_FILE_ID
			,	SUBT2.CB_ATCH_FILE_ID
			,	SUBT2.USE_CD
			,	SUBT2.REQ_KEY
			,	SUBT2.SPR_POINT
			,	SUBT2.REQ_RESULT_DESC_LEN
		    ,	SUBT2.REG_DTM
		    ,	SUBT2.REG_DTM_DAY
		    ,	SUBT2.REG_USR_ID
		    ,	SUBT2.REG_USR_IP
		    ,	SUBT2.MODIFY_DTM
		    ,	SUBT2.MODIFY_USR_ID
		    ,	SUBT2.MODIFY_USR_IP
		FROM
		(
			SELECT SUBT1.*
			FROM
			(
				SELECT
					A.PRJ_ID
					,	B.PRJ_GRP_ID
					,	B.REQ_ID
					,	B.REQ_ORD
					,	B.REQ_CLS_ID
					,	B.REQ_USR_ID
					,	B.REQ_USR_NM
					,	TO_CHAR(B.REQ_DTM, 'YYYY-MM-DD') AS REQ_DTM
					,	B.REQ_USR_DEPT_ID
					,	B.REQ_USR_DEPT_NM
					,	B.REQ_USR_EMAIL
					,	B.REQ_USR_NUM
					,	B.REQ_NM
					,	NVL2(B.REQ_PW, 'Y', 'N') AS REQ_PW
					,	B.REQ_CHARGER_ID
					, 	NVL2(B.REQ_ST_DTM, TO_CHAR(B.REQ_ST_DTM, 'YYYY-MM-DD HH24:MI:SS') , '') REQ_ST_DTM
	   		   		, 	NVL2(B.REQ_ED_DTM, TO_CHAR(B.REQ_ED_DTM, 'YYYY-MM-DD HH24:MI:SS') , '') REQ_ED_DTM
	   		   		, 	NVL2(B.REQ_ED_DTM, TRUNC((B.REQ_ED_DTM-B.REQ_ST_DTM)*24) , 0) END_TIME_REQUIRED
	   		   		, 	NVL2(B.REQ_ED_DTM, TRUNC((SYSDATE-B.REQ_ST_DTM)*24) , 0) NOT_END_TIME_REQUIRED
					, 	NVL2(B.REQ_ST_DU_DTM, TO_CHAR(B.REQ_ST_DU_DTM, 'YYYY-MM-DD HH24:MI:SS') , '') REQ_ST_DU_DTM
					, 	NVL2(B.REQ_ED_DU_DTM, TO_CHAR(B.REQ_ED_DU_DTM, 'YYYY-MM-DD HH24:MI:SS') , '') REQ_ED_DU_DTM
					,	B.REQ_PRO_TYPE
					,	B.REQ_NEW_TYPE
					,	B.REQ_ACCEPT_TXT
			    	,	B.REQ_TYPE_CD
					,	B.ATCH_FILE_ID
					,	B.CB_ATCH_FILE_ID
					,	B.USE_CD
					,	B.REQ_KEY
					,	A.SPR_POINT
					,	LENGTH(REQ_RESULT_DESC) AS REQ_RESULT_DESC_LEN
					,	A.REQ_LINK_ORD
				    ,	TO_CHAR(B.REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM
				    ,	TO_CHAR(B.REG_DTM, 'YYYY-MM-DD') AS REG_DTM_DAY
				    ,	B.REG_USR_ID
				    ,	B.REG_USR_IP
				    ,	TO_CHAR(B.MODIFY_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MODIFY_DTM
				    ,	B.MODIFY_USR_ID
				    ,	B.MODIFY_USR_IP
				FROM SPR1100 A 
				<isEqual property="sprType" compareValue="03">
					INNER JOIN SNP_REQ4100 B ON (A.PRJ_GRP_ID = B.PRJ_GRP_ID AND A.PRJ_ID = B.PRJ_ID AND A.REQ_ID = B.REQ_ID)
				</isEqual>
				<isNotEqual property="sprType" compareValue="03">
					INNER JOIN REQ4100 B ON (A.PRJ_GRP_ID = B.PRJ_GRP_ID AND A.PRJ_ID = B.PRJ_ID AND A.REQ_ID = B.REQ_ID)
				</isNotEqual>
				WHERE 1=1
				AND A.LIC_GRP_ID = #licGrpId#
				AND A.PRJ_GRP_ID = #prjGrpId#
				AND A.PRJ_ID = #prjId#
				AND A.SPR_ID = #sprId#
			) SUBT1
			WHERE 1=1
			<isNotEmpty property="searchTargetData">
				<isNotEmpty property="searchTargetId">
					<isEqual property="searchTargetId" compareValue="reqProTypeCd">
						AND	SUBT1.REQ_PRO_TYPE = #searchTargetData#
					</isEqual>
					<isEqual property="searchTargetId" compareValue="prjNm">
						AND	UPPER(SUBT1.PRJ_NM) LIKE '%'|| UPPER(#searchTargetData#) ||'%'
					</isEqual>
					<isEqual property="searchTargetId" compareValue="reqOrd">
						AND	SUBT1.REQ_ORD LIKE '%'|| #searchTargetData# ||'%'
					</isEqual>
					<isEqual property="searchTargetId" compareValue="prjGrpNm">
						AND	UPPER(SUBT1.PRJ_GRP_NM) LIKE '%'|| UPPER(#searchTargetData#) ||'%'
					</isEqual>
					<isEqual property="searchTargetId" compareValue="reqNm">
						AND	UPPER(SUBT1.REQ_NM) LIKE '%'|| UPPER(#searchTargetData#) ||'%'
					</isEqual>
					<isEqual property="searchTargetId" compareValue="reqDesc">
					<![CDATA[
						AND	REGEXP_REPLACE(SUBT1.REQ_DESC, '<[^>]*>', '') LIKE '%'|| #searchTargetData# ||'%'
					]]>
					</isEqual>
					<isEqual property="searchTargetId" compareValue="reqUsrNm">
						AND	SUBT1.REQ_USR_NM LIKE '%'|| #searchTargetData# ||'%'
					</isEqual>
					<isEqual property="searchTargetId" compareValue="reqUsrEmail">
						AND	SUBT1.REQ_USR_EMAIL LIKE '%'|| #searchTargetData# ||'%'
					</isEqual>
					<isEqual property="searchTargetId" compareValue="reqUsrNum">
						AND	SUBT1.REQ_USR_NUM LIKE '%'|| #searchTargetData# ||'%'
					</isEqual>
					<isEqual property="searchTargetId" compareValue="reqDtm">
						<isNotEmpty property="searchStartDt">
							AND	SUBT1.REQ_DTM &gt;= TO_DATE(#searchStartDt#, 'YYYY-MM-DD HH24:MI:SS')
						</isNotEmpty>
						<isNotEmpty property="searchEndDt">
							AND	SUBT1.REQ_DTM &lt;=   TO_DATE(#searchEndDt#, 'YYYY-MM-DD HH24:MI:SS')
						</isNotEmpty>
					</isEqual>
					<isEqual property="searchTargetId" compareValue="regDtmDay">
						<isNotEmpty property="searchStartDt">
							AND	SUBT1.REQ_DTM &gt;= TO_DATE(#searchStartDt#, 'YYYY-MM-DD HH24:MI:SS')
						</isNotEmpty>
						<isNotEmpty property="searchEndDt">
							AND	SUBT1.REQ_DTM &lt;=   TO_DATE(#searchEndDt#, 'YYYY-MM-DD HH24:MI:SS')
						</isNotEmpty>
					</isEqual>
				</isNotEmpty>
			</isNotEmpty>
		) SUBT2
		WHERE 1=1
		<isNotEmpty property="paramSortFieldId">
			<isNotEmpty property="sortDirection">
				ORDER BY $paramSortFieldId$
				<isEqual property="sortDirection" compareValue="desc">
					DESC
				</isEqual>
				<isEqual property="sortDirection" compareValue="asc">
					ASC
				</isEqual>
			</isNotEmpty>
		</isNotEmpty>
		<isEmpty property="paramSortFieldId">
			ORDER BY SUBT2.REQ_LINK_ORD, TO_NUMBER(REGEXP_REPLACE(SUBT2.REQ_ORD, '[^0-9]')) DESC NULLS LAST
		</isEmpty>
	</sql>
	
	
	<select id="spr1000DAO.selectSpr1000SprListCnt" parameterClass="java.util.Map"  resultClass="java.lang.Integer">
	    
		SELECT
			COUNT(*) AS CNT
		FROM ( 
			<include refid="selectSpr1000List"/>
		) Z
    </select>
    
    
    <select id="spr1000DAO.selectSpr1000SprList" parameterClass="java.util.Map"  resultMap="resultMapSpr1000List">
	    
		SELECT 
			Z.*
		FROM ( 
			<include refid="selectSpr1000List"/>
		) Z
		WHERE 1 = 1
		AND Z.RN BETWEEN (#firstIndex#+1) AND #lastIndex#
		ORDER BY 
			CASE WHEN SPR_TYPE_CD = '02' THEN 1 ELSE 2 END ASC,
			SPR_ST_DT ASC
		
    </select>
    
	
	<insert id="spr1000DAO.insertSpr1000SprInfo" parameterClass="java.util.Map">
		<selectKey resultClass="java.lang.String" keyProperty="newSprId">
		<![CDATA[
			SELECT	NVL( 
							SUBSTR(NEW_SPR_ID, 1, 11) || LPAD( (TO_NUMBER(SUBSTR(NEW_SPR_ID, 12, 5)) + 1) , 5, '0')
						,	'SPR' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '00001'
            		) AS NEW_SPR_ID
			FROM	(
			            SELECT	MAX(SPR_ID)  AS NEW_SPR_ID
			            FROM	SPR1000 A
			            WHERE	1=1
			            AND		A.LIC_GRP_ID = #licGrpId#
			            AND		A.PRJ_GRP_ID = #prjGrpId#
			            AND		A.PRJ_ID = #prjId#
			            AND		A.SPR_ID LIKE 'SPR' || TO_CHAR(SYSDATE, 'YYYYMMDD') || '%'
					)
		]]>
		</selectKey>
		
		<![CDATA[
			INSERT INTO SPR1000
			(
                LIC_GRP_ID		,	PRJ_GRP_ID		,	PRJ_ID
            ,	SPR_ID			,	SPR_NM			,	SPR_DESC
            ,	SPR_TYPE_CD		,	SPR_ST_DT		,	SPR_ED_DT
            ,	ORD				,	USE_CD			,	DEL_CD
            ,	REG_DTM			,	REG_USR_ID  	,	REG_USR_IP
            ,	MODIFY_DTM		,	MODIFY_USR_ID	,	MODIFY_USR_IP
        )VALUES(
                #licGrpId#		,	#prjGrpId#		,	#prjId#
            ,	#newSprId#		,	#sprNm#			,	#sprDesc#
            ,	#sprTypeCd#		,	REPLACE(#sprStDt#, '-', '')		,	REPLACE(#sprEdDt#, '-', '')
            ,	#ord#			,	#useCd#			,	'02'
            ,	SYSDATE			,	#regUsrId#	,	#regUsrIp#
            ,	SYSDATE			,	#regUsrId#	,	#regUsrIp#
        )		
		]]>
	</insert>
	
	
	<update id="spr1000DAO.updateSpr1000Info" parameterClass="java.util.Map">
	<![CDATA[
		
		UPDATE	SPR1000 A
        SET		MODIFY_DTM		= SYSDATE
            ,	MODIFY_USR_ID	= #modifyUsrId#
            ,	MODIFY_USR_IP	= #modifyUsrIp#
	]]>
			<isNotEmpty property="sprNm">
				,	SPR_NM		= #sprNm#     			
     		</isNotEmpty>
			<isNotEmpty property="sprDesc">
				,	SPR_DESC		= #sprDesc#     			
     		</isNotEmpty>
			<isNotEmpty property="sprStDt">
				,	SPR_ST_DT		= REPLACE(#sprStDt#, '-', '')
     		</isNotEmpty>
			<isNotEmpty property="sprEdDt">
				,	SPR_ED_DT		= REPLACE(#sprEdDt#, '-', '')
     		</isNotEmpty>
			<isNotEmpty property="ord">
				,	ORD		= #ord#
     		</isNotEmpty>
			<isNotEmpty property="useCd">
				,	USE_CD		= #useCd#
     		</isNotEmpty>
     		<isNotEmpty property="sprTypeCd">
				,	SPR_TYPE_CD		= #sprTypeCd#
     		</isNotEmpty>
     <![CDATA[
        WHERE	1=1
        AND		A.LIC_GRP_ID 	= #licGrpId#
        AND		A.PRJ_GRP_ID	= #prjGrpId#
        AND		A.PRJ_ID		= #prjId#
        AND		A.SPR_ID		= #sprId#
	]]>
	</update>
	
	
	<update id="spr1000DAO.deleteSpr1000SprInfo" parameterClass="java.util.Map">
	<![CDATA[
		
		UPDATE	SPR1000 A SET
			A.DEL_CD = #delCd#
			,	MODIFY_DTM		= SYSDATE
            ,	MODIFY_USR_ID	= #modifyUsrId#
            ,	MODIFY_USR_IP	= #modifyUsrIp#
        WHERE	1=1
		AND		A.LIC_GRP_ID 	= #licGrpId#
        AND		A.LIC_GRP_ID 	= #licGrpId#
        AND		A.PRJ_GRP_ID	= #prjGrpId#
        AND		A.PRJ_ID		= #prjId#
        AND		A.SPR_ID		= #sprId#
	]]>
	</update>
	
	
	<select id="spr1000DAO.selectSpr1000SprInfo" parameterClass="java.util.Map" resultMap="resultMapSpr1000List">
		
		SELECT T1.*
		FROM
		(
			<include refid="selectSpr1000List"/>
    	) T1
    	WHERE 1=1
		<isNotEmpty property="sprId">
			AND		T1.SPR_ID = #sprId#
		</isNotEmpty>
	</select>
	
	
	<select id="spr1000DAO.selectSpr1000SprReqListCnt" parameterClass="java.util.Map"  resultClass="java.lang.Integer">
	    
		SELECT
			COUNT(*) AS CNT
		FROM ( 
			<include refid="selectSpr1000ReqList"/>
		) Z
    </select>
    
    
    <select id="spr1000DAO.selectSpr1000SprReqList" parameterClass="java.util.Map"  resultMap="resultMapSpr1000ReqList">
	    
		SELECT 
			Z.*
		FROM ( 
			<include refid="selectSpr1000ReqList"/>
		) Z
		WHERE 1 = 1
		AND Z.RN BETWEEN (#firstIndex#+1) AND #lastIndex#
    </select>
    
    
	
	<select id="spr1000DAO.selectSpr1000SprReqNotEndListCnt" parameterClass="java.util.Map"  resultClass="java.lang.Integer">
	    
		SELECT
			COUNT(*) AS CNT
		FROM ( 
			<include refid="selectSpr1000ReqList"/>
		) Z
		WHERE   1=1
			AND Z.REQ_RESULT_DESC_LEN = 0
    </select>
    
    
    <select id="spr1000DAO.selectSpr1000SprInfoStat" parameterClass="java.util.Map"  resultClass="egovMap">
	    
	   	SELECT 	DECODE(T2.END_CNT_SUM, 0, 0, T2.END_TIME_REQUIRED / T2.END_CNT_SUM) AS AVG_END_TIME_REQUIRED
	   			, T2.ALL_CNT_SUM AS ALL_CNT_SUM
	   			, T2.END_CNT_SUM AS END_CNT_SUM
	   			, T2.SPR_POINT AS SPR_POINT
	   			, T2.END_SPR_POINT AS END_SPR_POINT
	   			, T2.NOT_END_CNT_SUM AS NOT_END_CNT_SUM
	   			, T2.END_TIME_REQUIRED AS TOTAL_END_TIME
		FROM
		(
			SELECT
				NVL(SUM(T.ALL_CNT),0) AS ALL_CNT_SUM
			  , NVL(SUM(T.END_CNT),0) AS END_CNT_SUM
			  , NVL(SUM(T.NOT_END_CNT),0) AS NOT_END_CNT_SUM
			  , NVL(SUM(T.SPR_POINT), 0) AS SPR_POINT
			  , NVL(SUM(T.END_SPR_POINT), 0) AS END_SPR_POINT
			  , NVL(SUM(T.END_TIME_REQUIRED), 0) AS END_TIME_REQUIRED
			  , NVL(SUM(T.NOT_END_TIME_REQUIRED), 0) AS NOT_END_TIME_REQUIRED
			FROM (
			    SELECT
			        1 AS ALL_CNT
			      , CASE WHEN B.REQ_PRO_TYPE='04' THEN 1 ELSE 0 END AS END_CNT
			      , CASE WHEN B.REQ_PRO_TYPE='02' THEN 1 ELSE 0 END AS NOT_END_CNT
			      , CASE WHEN B.REQ_PRO_TYPE!='04' THEN NVL2(B.REQ_ED_DTM, TRUNC((SYSDATE - B.REQ_ST_DTM)*24,1),0) ELSE 0 END AS NOT_END_TIME_REQUIRED 
			      , CASE WHEN B.REQ_PRO_TYPE='04' THEN NVL2(B.REQ_ED_DTM,TRUNC((B.REQ_ED_DTM-B.REQ_ST_DTM)*24,1) , 0) ELSE 0 END AS END_TIME_REQUIRED
			      , NVL(A.SPR_POINT,0) AS SPR_POINT
			      , CASE WHEN B.REQ_PRO_TYPE='04' THEN NVL(A.SPR_POINT,0) ELSE 0  END AS END_SPR_POINT
			    FROM SPR1100 A 
			    <isEqual property="sprType" compareValue="03">
			    	INNER JOIN SNP_REQ4100 B ON (A.PRJ_GRP_ID = B.PRJ_GRP_ID AND A.PRJ_ID = B.PRJ_ID AND A.REQ_ID = B.REQ_ID) 
			    </isEqual>
			    <isNotEqual property="sprType" compareValue="03">
			    	INNER JOIN REQ4100 B ON (A.PRJ_GRP_ID = B.PRJ_GRP_ID AND A.PRJ_ID = B.PRJ_ID AND A.REQ_ID = B.REQ_ID)
			    </isNotEqual>
			    INNER JOIN SPR1000 C ON(A.SPR_ID = C.SPR_ID)
			    WHERE 	1=1
					AND A.LIC_GRP_ID = #licGrpId#
					AND A.PRJ_GRP_ID = #prjGrpId#
					AND A.PRJ_ID = #prjId#
					AND A.SPR_ID = #sprId#
			) T
		)T2
    </select>
    
    
    <select id="spr1000DAO.selectSpr1000ReqRealSpdTime" parameterClass="java.util.Map" resultClass="egovMap">
    	
    	SELECT 
		  A.REQ_ST_DTM AS REQ_ST_DTM,
		  A.REQ_ED_DTM AS REQ_ED_DTM
		FROM REQ4100 A
		WHERE 	1 = 1
		AND		A.PRJ_GRP_ID = #prjGrpId#
		AND 	A.PRJ_ID = #prjId#
		AND		A.REQ_ID = #reqId#
    </select>
    
    
    <select id="spr1000DAO.selectSpr1000ChartInfo" parameterClass="java.util.Map" resultClass="egovMap">
    		
    	SELECT 
    		 T.REQ_ED_DTM AS REQ_ED_DTM
        	, T.END_REQ_CNT AS END_REQ_CNT
            , SUM(T.SPR_POINT) OVER(ORDER BY REQ_ED_DTM) AS CUM_SPR_POINT
            , T.TIME_REQUIRED AS TIME_REQUIRED
    	FROM
    	(
	    	SELECT
				  NVL(TO_CHAR(REQ_ED_DTM, 'YYYY-MM-DD'),0) AS REQ_ED_DTM
	 			, COUNT(*) AS END_REQ_CNT
	        	, SUM(SPR_POINT) AS SPR_POINT
	        	, SUM(NVL2(B.REQ_ED_DTM, TRUNC((B.REQ_ED_DTM-B.REQ_ST_DTM)*24) , 0)) AS TIME_REQUIRED
			    FROM SPR1100 A 
			   <isEqual property="sprType" compareValue="03">
			    	INNER JOIN SNP_REQ4100 B ON (A.PRJ_GRP_ID = B.PRJ_GRP_ID AND A.PRJ_ID = B.PRJ_ID AND A.REQ_ID = B.REQ_ID) 
			    </isEqual>
			    <isNotEqual property="sprType" compareValue="03">
			    	INNER JOIN REQ4100 B ON (A.PRJ_GRP_ID = B.PRJ_GRP_ID AND A.PRJ_ID = B.PRJ_ID AND A.REQ_ID = B.REQ_ID)
			    </isNotEqual>
			    INNER JOIN SPR1000 C ON(A.SPR_ID = C.SPR_ID)
			    WHERE 	1=1
					AND A.LIC_GRP_ID = #licGrpId#
					AND A.PRJ_ID = #prjId#
					AND A.SPR_ID = #sprId#
					AND B.REQ_PRO_TYPE = '04'
	        GROUP BY TO_CHAR(REQ_ED_DTM, 'YYYY-MM-DD')
	    ) T
    </select> 
    
    
	<insert id="spr1000DAO.insertSpr1003SprProcessList" parameterClass="java.util.Map">
		
		<![CDATA[
			INSERT INTO SPR1200
			(
                LIC_GRP_ID		,	PRJ_GRP_ID		,	PRJ_ID
            ,	SPR_ID			,	PROCESS_ID
            ,	REG_DTM			,	REG_USR_ID  	,	REG_USR_IP
            ,	MODIFY_DTM		,	MODIFY_USR_ID	,	MODIFY_USR_IP
        )VALUES(
                #licGrpId#		,	#prjGrpId#		,	#prjId#
            ,	#sprId#			,	#processId#
            ,	SYSDATE			,	#regUsrId#	,	#regUsrIp#
            ,	SYSDATE			,	#regUsrId#	,	#regUsrIp#
        )		
		]]>
	</insert>
	
	<select id="spr1000DAO.selectSpr1003SprProcessList" parameterClass="java.util.Map">
		
		SELECT *
		FROM SPR1200
		WHERE 	1 = 1
		AND 	LIC_GRP_ID 	= #licGrpId#
		AND		PRJ_GRP_ID	= #prjGrpId#
		AND 	PRJ_ID		= #prjId#
		AND		SPR_ID 		= #sprId#
	</select>
	
	<select id="spr1000DAO.selectSpr1000SprTerm" parameterClass="java.util.Map" resultClass="egovMap">
		
		SELECT 	TRUNC(A.SPR_ED_DT - A.SPR_ST_DT) AS DISTANCE
				,A.SPR_ED_DT AS SPR_ED_DT
				,A.SPR_ST_DT AS SPR_ST_DT
		FROM SPR1000 A
		WHERE 	1=1
		AND A.LIC_GRP_ID = #licGrpId#
		AND A.PRJ_ID = #prjId#
		AND A.SPR_ID = #data#
	</select>
	
	<select id="spr1000DAO.selectSpr1000VelocityChartInfo" parameterClass="java.util.Map" resultClass="egovMap">
		
		SELECT SUM(A.SPR_POINT) AS SPR_POINT
		FROM SPR1100 A 
		<isEqual property="sprType" compareValue="03">
		    	INNER JOIN SNP_REQ4100 B ON (A.PRJ_GRP_ID = B.PRJ_GRP_ID AND A.PRJ_ID = B.PRJ_ID AND A.REQ_ID = B.REQ_ID) 
	    </isEqual>
	    <isNotEqual property="sprType" compareValue="03">
		    	INNER JOIN REQ4100 B ON (A.PRJ_GRP_ID = B.PRJ_GRP_ID AND A.PRJ_ID = B.PRJ_ID AND A.REQ_ID = B.REQ_ID)
		</isNotEqual> 
		INNER JOIN SPR1000 C ON(A.SPR_ID = C.SPR_ID)
		WHERE 	1=1
		AND A.LIC_GRP_ID = #licGrpId#
		AND A.PRJ_ID = #prjId#
		AND A.SPR_ID = #data#
		AND B.REQ_PRO_TYPE = '04'
        AND B.REQ_ED_DTM BETWEEN TO_DATE(#startD#, 'YYYY-MM-DD') AND TO_DATE(#endD#, 'YYYY-MM-DD') 
	</select>
	
	<insert id="spr1000DAO.insertStm3000SnapShot" parameterClass="java.util.Map">
		
		INSERT INTO SNP_STM3000
			SELECT A.LIC_GRP_ID, 
				#prjGrpId# AS PRJ_GRP_ID,
				#prjId# AS PRJ_ID, 
				#sprId# AS SPR_ID, 
				A.USR_ID, 
				A.USR_PW, 
				A.USR_NM, 
				A.EMAIL, 
				A.TELNO, 
				A.DEPT_ID, 
				A.ETC, 
				A.WK_ST_TM, 
				A.WK_ED_TM, 
				A.BK_ST_TM, 
				A.BK_ED_TM, 
				A.PW_FAIL_CNT, 
				A.BLOCK,
				A.ADM_YN, 
				A.USR_IMG_ID, 
				A.USE_CD,
				A.USR_POSITION_CD, 
				A.USR_DUTY_CD, 
				A.REQ_MAIN_COLOR, 
				A.REQ_FONT_COLOR, 
				A.INI_YN, 
				A.INI_DTM, 
				A.REC_LOGIN_DTM, 
				A.DSH_DISPLAY_CD, 
				A.DEL_CD, 
				A.REG_DTM, 
				A.REG_USR_ID, 
				A.REG_USR_IP, 
				A.MODIFY_DTM, 
				A.MODIFY_USR_ID, 
				A.MODIFY_USR_IP
			FROM 	STM3000 A
			INNER JOIN (SELECT DISTINCT(USR_ID), PRJ_ID FROM PRJ2001 WHERE PRJ_ID = #prjId#) B ON(A.USR_ID = B.USR_ID)
			WHERE 	1 = 1
			AND  	LIC_GRP_ID = #licGrpId#
	</insert>
	
	<insert id="spr1000DAO.insertReq3000SnapShot" parameterClass="java.util.Map">
	
		INSERT INTO SNP_REQ3000
			SELECT 
					B.LIC_GRP_ID AS LIC_GRP_ID,  
					B.PRJ_GRP_ID AS PRJ_GRP_ID, 
					B.PRJ_ID AS PRJ_ID, 
					B.SPR_ID AS SPR_ID, 
					C.REQ_GRP_ID, 
					C.REQ_GRP_NO, 
					C.REQ_GRP_NM, 
					C.REQ_GRP_DESC, 
					C.ATCH_FILE_ID, 
					C.REQ_GRP_KEY, 
					C.REQ_GRP_USR_ID, 
					C.REQ_GRP_CHARGER_ID, 
					C.USE_CD, 
					C.REG_DTM, 
					C.REG_USR_ID, 
					C.REG_USR_IP, 
					C.MODIFY_DTM, 
					C.MODIFY_USR_ID, 
					C.MODIFY_USR_IP
			FROM REQ3001 A INNER JOIN SPR1100 B 
				ON (A.PRJ_GRP_ID = B.PRJ_GRP_ID AND A.PRJ_ID = B.PRJ_ID AND A.REQ_ID = B.REQ_ID) 
			LEFT JOIN REQ3000 C 
				ON (A.PRJ_GRP_ID = C.PRJ_GRP_ID AND A.PRJ_ID = C.PRJ_ID AND A.REQ_GRP_ID = C.REQ_GRP_ID)
			WHERE 1 = 1
			AND B.LIC_GRP_ID = #licGrpId#
       		AND B.PRJ_GRP_ID = #prjGrpId#
			AND B.PRJ_ID = #prjId#
			AND B.SPR_ID = #sprId#
	</insert>
	
	<insert id="spr1000DAO.insertReq3001SnapShot" parameterClass="java.util.Map">
	
		INSERT INTO SNP_REQ3001
			 SELECT B.LIC_GRP_ID AS LIC_GRP_ID,  
					B.PRJ_GRP_ID AS PRJ_GRP_ID, 
					B.PRJ_ID AS PRJ_ID, 
					B.SPR_ID AS SPR_ID, 
			 		A.REQ_GRP_ID, 
			 		A.REQ_ID, 
			 		A.REQ_LINK_ORD, 
			 		A.REG_DTM, 
			 		A.REG_USR_ID, 
			 		A.REG_USR_IP, 
			 		A.MODIFY_DTM, 
			 		A.MODIFY_USR_ID, 
			 		A.MODIFY_USR_IP
			FROM REQ3001 A INNER JOIN SPR1100 B 
				ON (A.PRJ_GRP_ID = B.PRJ_GRP_ID AND A.PRJ_ID = B.PRJ_ID AND A.REQ_ID = B.REQ_ID)
			WHERE 1 = 1
			AND B.LIC_GRP_ID = #licGrpId#
       		AND B.PRJ_GRP_ID = #prjGrpId#
			AND B.PRJ_ID = #prjId#
			AND B.SPR_ID = #sprId#
	</insert>
	
	<insert id="spr1000DAO.insertReq4100SnapShot" parameterClass="java.util.Map">
	
		INSERT INTO SNP_REQ4100
			SELECT	B.LIC_GRP_ID AS LIC_GRP_ID,  
					B.PRJ_GRP_ID AS PRJ_GRP_ID, 
					B.PRJ_ID AS PRJ_ID, 
					B.SPR_ID AS SPR_ID,
					A.REQ_ID, 
					A.REQ_CLS_ID, 
					A.REQ_ORD, 
					A.REQ_USR_ID, 
					A.REQ_USR_NM, 
					A.REQ_DTM, 
					A.REQ_USR_DEPT_ID, 
					A.REQ_USR_DEPT_NM, 
					A.REQ_USR_EMAIL, 
					A.REQ_USR_NUM, 
					A.REQ_USR_IMG_ID, 
					A.REQ_NM,
					A.REQ_DESC, 
					A.REQ_PW, 
					A.REQ_CHARGER_ID, 
					A.REQ_ST_DTM, 
					A.REQ_ED_DTM, 
					A.REQ_ST_DU_DTM, 
					A.REQ_ED_DU_DTM, 
					A.REQ_PRO_TYPE, 
					A.REQ_NEW_TYPE, 
					A.REQ_ACCEPT_TXT, 
					A.REQ_TYPE_CD, 
					A.ATCH_FILE_ID, 
					A.CB_ATCH_FILE_ID, 
					A.MILESTONE_ID, 
					A.PROCESS_ID, 
					A.FLOW_ID, 
					A.USE_CD, 
					A.REQ_KEY, 
					A.REQ_MIDDLE_DONE_TXT, 
					A.REQ_SIGN_CD, 
					A.REQ_SIGN_PROCESS_ID, 
					A.REQ_SIGN_FLOW_ID, 
					A.REQ_SIGN_ORD, 
					A.REG_DTM, 
					A.REG_USR_ID, 
					A.REG_USR_IP, 
					A.MODIFY_DTM, 
					A.MODIFY_USR_ID, 
					A.MODIFY_USR_IP
  			FROM REQ4100 A JOIN SPR1100 B
		    ON (A.REQ_ID = B.REQ_ID AND A.PRJ_ID = B.PRJ_ID AND A.PRJ_GRP_ID = B.PRJ_GRP_ID)
		    WHERE 1 = 1
		    AND B.LIC_GRP_ID = #licGrpId#
		    AND B.PRJ_GRP_ID = #prjGrpId#
			AND B.PRJ_ID = #prjId#
			AND B.SPR_ID = #sprId#
			
	</insert> 
	
	<insert id="spr1000DAO.insertReq6001SnapShot" parameterClass="java.util.Map" >
	
		INSERT INTO SNP_REQ6001
			SELECT 	B.LIC_GRP_ID AS LIC_GRP_ID,  
					B.PRJ_GRP_ID AS PRJ_GRP_ID, 
					B.PRJ_ID AS PRJ_ID, 
					B.SPR_ID AS SPR_ID,
					A.REQ_ID,
					A.REQ_CHG_ID, 
					A.REQ_CHG_TYPE_CD, 
					A.CHG_USR_ID, 
					A.CHG_DTM, 
					A.PRE_PROCESS_ID, 
					A.CHG_PROCESS_ID, 
					A.PRE_FLOW_ID, 
					A.CHG_FLOW_ID, 
					A.PRE_CHARGER_ID, 
					A.CHG_CHARGER_ID, 
					A.REG_DTM,
					A.REG_USR_ID, 
					A.REG_USR_IP, 
					A.MODIFY_DTM, 
					A.MODIFY_USR_ID, 
					A.MODIFY_USR_IP  
			FROM REQ6001 A INNER JOIN SPR1100 B ON (A.LIC_GRP_ID = B.LIC_GRP_ID AND A.PRJ_ID =B.PRJ_ID AND A.REQ_ID = B.REQ_ID) 
			WHERE 1 = 1
		    AND B.LIC_GRP_ID = #licGrpId#
		    AND B.PRJ_GRP_ID = #prjGrpId#
			AND B.PRJ_ID = #prjId#
			AND B.SPR_ID = #sprId#
	</insert>
	
	<insert id="spr1000DAO.insertPrj1100SnapShot" parameterClass="java.util.Map">
	
		INSERT INTO SNP_PRJ1100
			SELECT 
				A.LIC_GRP_ID, 
				A.PRJ_GRP_ID, 
				A.PRJ_ID, 
				A.SPR_ID, 
				B.PROCESS_ID, 
				B.PROCESS_NM, 
				B.PROCESS_DESC, 
				B.PROCESS_TRANSFER_CD, 
				B.PROCESS_DISABLED_CD, 
				B.USE_CD, 
				B.DEL_CD, 
				B.PROCESS_ORD, 
				B.REG_DTM, 
				B.REG_USR_ID, 
				B.REG_USR_IP, 
				B.MODIFY_DTM, 
				B.MODIFY_USR_ID, 
				B.MODIFY_USR_IP 
				FROM SPR1200 A INNER JOIN PRJ1100 B 
					ON(A.PRJ_ID = B.PRJ_ID AND A.PROCESS_ID = B.PROCESS_ID AND B.USE_CD = '01' AND B.DEL_CD = '02')
			WHERE 1 = 1 
			AND A.LIC_GRP_ID = #licGrpId#
		    AND A.PRJ_GRP_ID = #prjGrpId#
			AND A.PRJ_ID = #prjId#
			AND A.SPR_ID = #sprId#
	</insert>
	
	<insert id="spr1000DAO.insertPrj1101SnapShot" parameterClass="java.util.Map">
	
	INSERT INTO SNP_PRJ1101
			SELECT 	A.LIC_GRP_ID, 
					A.PRJ_GRP_ID, 
					A.PRJ_ID, 
					A.SPR_ID, 
					B.PROCESS_ID, 
					B.FLOW_ID, 
					B.FLOW_NM, 
					B.FLOW_LEFT, 
					B.FLOW_TOP, 
					B.FLOW_START_CD, 
					B.FLOW_DONE_CD, 
					B.FLOW_ESSENTIAL_CD, 
					B.FLOW_SIGN_CD, 
					B.FLOW_SIGN_STOP_CD, 
					B.FLOW_MIDDLE_END_CD, 
					B.FLOW_WORK_CD, 
					B.FLOW_REVISION_CD, 
					B.FLOW_DPL_CD, 
					B.FLOW_AUTH_CD, 
					B.FLOW_TITLE_BG_COLOR, 
					B.FLOW_TITLE_COLOR, 
					B.USE_CD, 
					B.REG_DTM, 
					B.REG_USR_ID, 
					B.REG_USR_IP, 
					B.MODIFY_DTM, 
					B.MODIFY_USR_ID, 
					B.MODIFY_USR_IP 
			FROM SPR1200 A INNER JOIN PRJ1101 B 
				ON(A.PRJ_ID = B.PRJ_ID AND A.PROCESS_ID = B.PROCESS_ID AND B.USE_CD = '01')
			INNER JOIN PRJ1100 C
				ON(A.PRJ_ID = C.PRJ_ID AND A.PROCESS_ID = C.PROCESS_ID AND C.USE_CD = '01' AND C.DEL_CD = '02') 
			WHERE 1 = 1 
			AND A.LIC_GRP_ID = #licGrpId#
		    AND A.PRJ_GRP_ID = #prjGrpId#
			AND A.PRJ_ID = #prjId#
			AND A.SPR_ID = #sprId#
	</insert>
	
	<insert id="spr1000DAO.insertPrj1102SnapShot" parameterClass="java.util.Map">
	
		INSERT INTO SNP_PRJ1102
			SELECT 	A.LIC_GRP_ID, 
					A.PRJ_GRP_ID, 
					A.PRJ_ID,
					A.SPR_ID, 
					D.PROCESS_ID, 
					D.FLOW_ID, 
					D.ITEM_ID, 
					D.REQ_ID, 
					D.ITEM_DIVISION, 
					D.ITEM_NM, 
					D.ITEM_CODE, 
					D.ITEM_COMMON_CODE, 
					D.ITEM_PC_ROW_NUM, 
					D.ITEM_TABLET_ROW_NUM, 
					D.ITEM_MOBILE_ROW_NUM, 
					D.ITEM_TYPE, 
					D.ITEM_LENGTH, 
					D.ITEM_ESSENTIAL_CD, 
					D.ITEM_ACCEPT_CD, 
					D.ITEM_ORD, 
					D.USE_CD, 
					D.REG_DTM, 
					D.REG_USR_ID, 
					D.REG_USR_IP, 
					D.MODIFY_DTM, 
					D.MODIFY_USR_ID, 
					D.MODIFY_USR_IP
			FROM SPR1200 A INNER JOIN PRJ1101 B 
				ON(A.PRJ_ID = B.PRJ_ID AND A.PROCESS_ID = B.PROCESS_ID AND B.USE_CD = '01')
			INNER JOIN PRJ1100 C
				ON(A.PRJ_ID = C.PRJ_ID AND A.PROCESS_ID = C.PROCESS_ID AND C.USE_CD = '01' AND C.DEL_CD = '02')
			INNER JOIN PRJ1102 D
				ON(A.PRJ_ID = D.PRJ_ID AND A.PROCESS_ID = D.PROCESS_ID AND B.FLOW_ID = D.FLOW_ID)
			WHERE 1 = 1 
			AND A.LIC_GRP_ID = #licGrpId#
		    AND A.PRJ_GRP_ID = #prjGrpId#
			AND A.PRJ_ID = #prjId#
			AND A.SPR_ID = #sprId#
	</insert>
	
	<insert id="spr1000DAO.insertPrj1103SnapShot" parameterClass="java.util.Map">
	
		INSERT INTO SNP_PRJ1103
			SELECT 	A.LIC_GRP_ID, 
					A.PRJ_GRP_ID, 
					A.PRJ_ID, 
					A.SPR_ID, 
					E.PROCESS_ID, 
					E.FLOW_ID, 
					E.ITEM_ID,
					E.REQ_ID, 
					E.ITEM_VALUE, 
					E.ITEM_VALUE_NM, 
					E.REG_DTM, 
					E.REG_USR_ID, 
					E.REG_USR_IP, 
					E.MODIFY_DTM, 
					E.MODIFY_USR_ID, 
					E.MODIFY_USR_IP
			FROM SPR1200 A INNER JOIN PRJ1101 B 
				ON(A.PRJ_ID = B.PRJ_ID AND A.PROCESS_ID = B.PROCESS_ID AND B.USE_CD = '01')
			INNER JOIN PRJ1100 C
				ON(A.PRJ_ID = C.PRJ_ID AND A.PROCESS_ID = C.PROCESS_ID AND C.USE_CD = '01' AND C.DEL_CD = '02')
			INNER JOIN PRJ1102 D
				ON(A.PRJ_ID = D.PRJ_ID AND A.PROCESS_ID = D.PROCESS_ID AND B.FLOW_ID = D.FLOW_ID AND D.USE_CD = '01' )
			INNER JOIN PRJ1103 E
				ON(A.PRJ_ID = E.PRJ_ID AND A.PROCESS_ID = E.PROCESS_ID AND B.FLOW_ID = E.FLOW_ID AND D.ITEM_ID = E.ITEM_ID)
			WHERE 1 = 1 
			AND A.LIC_GRP_ID = #licGrpId#
		    AND A.PRJ_GRP_ID = #prjGrpId#
			AND A.PRJ_ID = #prjId#
			AND A.SPR_ID = #sprId#
	</insert>
 	
 	<insert id="spr1000DAO.insertPrj1106SnapShot" parameterClass="java.util.Map">
 	
	 	INSERT INTO SNP_PRJ1106
			SELECT 	A.LIC_GRP_ID, 
					A.PRJ_GRP_ID, 
					A.PRJ_ID, 
					A.SPR_ID, 
					C.PROCESS_ID, 
					C.PROCESS_AUTH_TYPE_CD, 
					C.PROCESS_AUTH_TARGET_ID, 
					C.REG_DTM, 
					C.REG_USR_ID, 
					C.REG_USR_IP, 
					C.MODIFY_DTM, 
					C.MODIFY_USR_ID, 
					C.MODIFY_USR_IP
			FROM SPR1200 A INNER JOIN PRJ1100 B
				ON(A.PRJ_ID = B.PRJ_ID AND A.PROCESS_ID = B.PROCESS_ID AND B.USE_CD = '01' AND B.DEL_CD = '02')
			INNER JOIN PRJ1106 C 
				ON(A.PRJ_ID = C.PRJ_ID AND A.PROCESS_ID = C.PROCESS_ID)
			WHERE 1 = 1 
			AND A.LIC_GRP_ID = #licGrpId#
		    AND A.PRJ_GRP_ID = #prjGrpId#
			AND A.PRJ_ID = #prjId#
			AND A.SPR_ID = #sprId#
 	</insert>
 	
 	<insert id="spr1000DAO.insertPrj1107SnapShot" parameterClass="java.util.Map">
 	
 	INSERT INTO SNP_PRJ1107
		SELECT 	A.LIC_GRP_ID, 
				A.PRJ_GRP_ID, 
				A.PRJ_ID, 
				A.SPR_ID, 
				A.PROCESS_ID, 
				D.FLOW_ID, 
				D.FLOW_NEXT_ID, 
				D.REG_DTM, 
				D.REG_USR_ID, 
				D.REG_USR_IP, 
				D.MODIFY_DTM, 
				D.MODIFY_USR_ID, 
				D.MODIFY_USR_IP
		FROM SPR1200 A INNER JOIN PRJ1101 B 
			ON(A.PRJ_ID = B.PRJ_ID AND A.PROCESS_ID = B.PROCESS_ID AND B.USE_CD = '01')
		INNER JOIN PRJ1100 C
			ON(A.PRJ_ID = C.PRJ_ID AND A.PROCESS_ID = C.PROCESS_ID AND C.USE_CD = '01' AND C.DEL_CD = '02')
		INNER JOIN PRJ1107 D
			ON(A.PRJ_ID = D.PRJ_ID AND A.PROCESS_ID = D.PROCESS_ID AND B.FLOW_ID = D.FLOW_ID)
		WHERE 1 = 1 
		AND A.LIC_GRP_ID = #licGrpId#
	    AND A.PRJ_GRP_ID = #prjGrpId#
		AND A.PRJ_ID = #prjId#
		AND A.SPR_ID = #sprId#
 	</insert>
</sqlMap>